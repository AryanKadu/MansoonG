<%- include('_layouts/header') %>

  <link rel="stylesheet" href="/css/product.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

  <div class="container">
    <div class="row my-4">
      <!-- Page Header -->
      <div class="col-xs-12">
        <h1 class="page-header fade-in">
          <%= p.title %>
        </h1>
      </div>

      <!-- Product Image Section -->
      <div class="col-xs-12 col-md-5">
        <div class="product-image-section slide-in-left">
          <div class="product-image-container">
            <% if (p.image) { %>
              <img class="main-product-image" src="<%= p.image %>" alt="<%= p.title %> - Premium Quality Product"
                onclick="openImageZoom(this.src)">
              <% } else { %>
                <img class="main-product-image" src="/images/default.jpg" alt="Default Product Image"
                  onclick="openImageZoom(this.src)">
                <% } %>
          </div>

          <!-- Additional Images/Gallery (if available) -->
          <% if (galleryImages && galleryImages.length> 0) { %>
            <div class="product-thumbnails">
              <% galleryImages.forEach(function(image) { %>
                <% if (image !=="thumbs" ) { %>
                  <div class="thumbnail-item">
                    <img src="/product_images/<%= p.id %>/gallery/thumbs/<%= image %>"
                      alt="<%= p.title %> - Gallery Image"
                      onclick="changeMainImage('/product_images/<%= p.id %>/gallery/<%= image %>')">
                  </div>
                  <% } %>
                    <% }) %>
            </div>
            <% } %>
        </div>
      </div>

      <!-- Product Info Section -->
      <div class="col-xs-12 col-md-7">
        <div class="product-info-section slide-in-right">

          <!-- Product Description -->
          <div class="product-description">
            <%= p.desc %>
          </div>

          <!-- Price Section -->
          <div class="price-section">
            <div class="price-label">Price</div>
            <div class="price-main">
              <span class="price-currency">₹</span>
              <%= parseFloat(p.price).toFixed(2) %>
            </div>
          </div>

          <!-- Product Details -->
          <div class="product-details">
            <div class="detail-item">
              <span class="detail-label">
                <i class="fas fa-flask mr-2"></i>Volume
              </span>
              <span class="detail-value">
                <%= p.size %> ml
              </span>
            </div>
            <!-- <div class="detail-item">
            <span class="detail-label">
              <i class="fas fa-truck mr-2"></i>Shipping
            </span>
            <span class="detail-value">Free shipping on orders over ₹500</span>
          </div> -->
            <div class="detail-item">
              <span class="detail-label">
                <i class="fas fa-shield-alt mr-2"></i>Warranty
              </span>
              <span class="detail-value">Quality guaranteed</span>
            </div>
            <div class="detail-item">
              <span class="detail-label">
                <i class="fas fa-check-circle mr-2"></i>Availability
              </span>

              <% if(p.tt> 0 && p.inStock) { %>
                <span class="detail-value" style="color: #28a745;">In Stock</span>
                <% } else { %>
                  <span class="detail-value" style="color: #a72828;">Out of Stock</span>
                  <% } %>
            </div>
          </div>

          <!-- Action Section -->
          <div class="action-section">
            <% if (loggedIn) { %>

              <!-- Quantity Selector -->
              <!-- <div class="quantity-selector">
              <label class="quantity-label">Quantity:</label>
              <div class="quantity-controls">
                <button type="button" class="quantity-btn" onclick="changeQuantity(-1)">
                  <i class="fas fa-minus"></i>
                </button>
                <input type="number" 
                       id="quantity" 
                       class="quantity-input" 
                       value="1" 
                       min="1" 
                       max="10" 
                       readonly>
                <button type="button" class="quantity-btn" onclick="changeQuantity(1)">
                  <i class="fas fa-plus"></i>
                </button>
              </div>
            </div> -->

              <!-- Action Buttons -->
              <div class="btn-group">
                <button class="btn btn-outline-secondary" style="background-color: #FFD700; color: #1C1C1C;"
                  onclick="addToCart('<%= p.slug %>')" id="addToCartBtn">
                  <i class="fas fa-shopping-cart"></i>

                  Add to Cart
                </button>

                <!-- <button class="btn btn-full-width" 
                      style="background-color:#1C1C1C; color: #e8fff5;"
                      onclick="buyNow('<%= p._id %>')"
                      id="buyNowBtn">
                <i class="fas fa-bolt"></i>
                Buy Now
              </button> -->

                <form action="/cart/direct-buy/<%= p._id %>" method="POST" id="directBuyForm">
                  <label class="quantity-label">Quantity:</label>

                  <button type="button" class="quantity-btn" onclick="changeQuantity(-1)">
                    <i class="fas fa-minus"></i>
                  </button>

                  <input type="number" id="quantity" class="quantity-input" value="1" min="1" max="10" name="quantity"
                    required>

                  <button type="button" class="quantity-btn" onclick="changeQuantity(1)">
                    <i class="fas fa-plus"></i>
                  </button>

                  <% if(p.tt> 0 && p.inStock) { %>
                    <button class="btn btn-full-width" style="background-color:#1C1C1C; color: #e8fff5;" type="submit">
                      Buy Now
                    </button>
                    <% } else { %>
                      <h4 style="color: #a72828;"><i><strong>Out of Stock</strong></i></h4>
                      <% } %>
                </form>








              </div>

              <!-- Additional Actions -->
              <div class="btn-group" style="margin-top: 10px;">
                <!-- <button class="btn btn-outline-secondary" 
                      onclick="addToWishlist('<%= p._id %>')"
                      style="flex: 1;">
                <i class="fas fa-heart"></i>
                Add to Wishlist
              </button> -->

                <!-- <button class="btn btn-outline-secondary" 
                      onclick="shareProduct()"
                      style="flex: 1;">
                <i class="fas fa-share-alt"></i>
                Share
              </button> -->
              </div>

              <% } else { %>

                <!-- Login Required Alert -->
                <div class="alert alert-warning">
                  <i class="fas fa-info-circle alert-icon"></i>
                  <div>
                    <strong>Login Required</strong><br>
                    You must be logged in to purchase items.
                  </div>
                </div>

                <div class="btn-group">
                  <a href="/users/login" class="btn btn-primary btn-full-width">
                    <i class="fas fa-sign-in-alt"></i>
                    Login to Purchase
                  </a>
                </div>

                <% } %>
          </div>

          <!-- Product Features -->
          <div class="product-features" style="margin-top: 30px;">
            <h6 style="color: #2c3e50; margin-bottom: 15px; font-weight: 600;">
              <i class="fas fa-star mr-2"></i>Product Features
            </h6>
            <ul style="list-style: none; padding: 0;">
              <li style="padding: 5px 0; color: #6c757d;">
                <i class="fas fa-check" style="color: #28a745; margin-right: 8px;"></i>
                Premium quality ingredients
              </li>
              <li style="padding: 5px 0; color: #6c757d;">
                <i class="fas fa-check" style="color: #28a745; margin-right: 8px;"></i>
                Carefully tested and verified
              </li>
              <li style="padding: 5px 0; color: #6c757d;">
                <i class="fas fa-check" style="color: #28a745; margin-right: 8px;"></i>
                Safe for daily use
              </li>
              <li style="padding: 5px 0; color: #6c757d;">
                <i class="fas fa-check" style="color: #28a745; margin-right: 8px;"></i>
                Eco-friendly packaging
              </li>
            </ul>
          </div>

        </div>
      </div>

      <!-- Additional Gallery Section (if needed) -->
      <% if (galleryImages && galleryImages.length> 0) { %>
        <div class="col-xs-12" style="margin-top: 40px;">
          <h5 style="color: #2c3e50; margin-bottom: 20px; font-weight: 600;">
            <i class="fas fa-images mr-2"></i>Product Gallery
          </h5>
          <div class="gallery">
            <% galleryImages.forEach(function(image) { %>
              <% if (image !=="thumbs" ) { %>
                <div class="gallery-item">
                  <img src="/product_images/<%= p.id %>/gallery/thumbs/<%= image %>"
                    alt="<%= p.title %> - Gallery Image"
                    onclick="openImageZoom('/product_images/<%= p.id %>/gallery/<%= image %>')">
                </div>
                <% } %>
                  <% }) %>
          </div>
        </div>
        <% } %>

    </div>
  </div>

  <!-- Image Zoom Modal -->
  <div id="imageZoomOverlay" class="image-zoom-overlay" onclick="closeImageZoom()">
    <button class="zoom-close" onclick="closeImageZoom()">
      <i class="fas fa-times"></i>
    </button>
    <img id="zoomedImage" src="" alt="Zoomed Product Image">
  </div>

  <!-- Toast Container -->
  <div id="toastContainer" class="toast-container"></div>

  <%- include('_layouts/footer') %>

    <script>

      document.getElementById("directBuyForm").addEventListener("submit", function (e) {
        const confirmed = confirm("⚠️ Are you sure you want to place this order?\n\nOnce placed, it cannot be canceled or changed.");
        if (!confirmed) {
          e.preventDefault(); // Cancel submission
        }
      });

      function changeQuantity(delta) {
        const qtyInput = document.getElementById("quantity");
        let current = parseInt(qtyInput.value);
        let newQty = current + delta;

        if (newQty >= parseInt(qtyInput.min) && newQty <= parseInt(qtyInput.max)) {
          qtyInput.value = newQty;
        }
      }

      document.addEventListener('DOMContentLoaded', function () {

        // Quantity Management
        window.changeQuantity = function (change) {
          const quantityInput = document.getElementById('quantity');
          let currentValue = parseInt(quantityInput.value);
          let newValue = currentValue + change;

          if (newValue >= 1 && newValue <= 10) {
            quantityInput.value = newValue;
          }
        };

        // Add to Cart Function
        window.addToCart = function (productSlug) {
          const btn = document.getElementById('addToCartBtn');
          const quantity = document.getElementById('quantity').value;

          // Add loading state
          btn.classList.add('btn-loading');
          btn.disabled = true;

          fetch(`/cart/add/${productSlug}?quantity=${quantity}`, {
            method: 'GET',
            headers: {
              'X-Requested-With': 'XMLHttpRequest'
            }
          })
            .then(response => {
              if (response.ok) {
                // Success - Update button
                btn.innerHTML = '<i class="fas fa-check"></i> Added to Cart';
                btn.classList.remove('btn-outline-secondary', 'btn-loading');
                btn.classList.add('btn-success');

                // Show success toast
                showToast('Product added to cart successfully!', 'success');

                // Reset button after 3 seconds
                setTimeout(() => {
                  btn.innerHTML = '<i class="fas fa-shopping-cart"></i> Add to Cart';
                  btn.classList.remove('btn-success');
                  btn.classList.add('btn-outline-secondary');
                  btn.disabled = false;
                }, 3000);

              } else {
                throw new Error('Failed to add to cart');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              btn.classList.remove('btn-loading');
              btn.disabled = false;
              showToast('Failed to add to cart. Please try again.', 'error');
            });
        };

        // Buy Now Function
        window.buyNow = function (productId) {
          const btn = document.getElementById('buyNowBtn');
          const quantity = document.getElementById('quantity').value;

          // Add loading state
          btn.classList.add('btn-loading');
          btn.disabled = true;

          // Create and submit form
          const form = document.createElement('form');
          form.method = 'POST';
          form.action = `/cart/direct-buy/${productId}`;

          const quantityInput = document.createElement('input');
          quantityInput.type = 'hidden';
          quantityInput.name = 'quantity';
          quantityInput.value = quantity;

          form.appendChild(quantityInput);
          document.body.appendChild(form);
          form.submit();
        };

        // Image Zoom Functions
        window.openImageZoom = function (imageSrc) {
          const overlay = document.getElementById('imageZoomOverlay');
          const zoomedImage = document.getElementById('zoomedImage');

          zoomedImage.src = imageSrc;
          overlay.classList.add('active');
          document.body.style.overflow = 'hidden';
        };

        window.closeImageZoom = function () {
          const overlay = document.getElementById('imageZoomOverlay');
          overlay.classList.remove('active');
          document.body.style.overflow = 'auto';
        };

        // Change Main Image (for gallery)
        window.changeMainImage = function (imageSrc) {
          const mainImage = document.querySelector('.main-product-image');
          mainImage.src = imageSrc;

          // Update active thumbnail
          document.querySelectorAll('.thumbnail-item').forEach(item => {
            item.classList.remove('active');
          });

          // Add active class to clicked thumbnail
          event.target.closest('.thumbnail-item').classList.add('active');
        };

        // Add to Wishlist Function
        window.addToWishlist = function (productId) {
          showToast('Added to wishlist!', 'success');
          // Add your wishlist logic here
        };

        // Share Product Function
        window.shareProduct = function () {
          if (navigator.share) {
            navigator.share({
              title: '<%= p.title %>',
              text: '<%= p.desc %>',
              url: window.location.href
            });
          } else {
            // Fallback: Copy URL to clipboard
            navigator.clipboard.writeText(window.location.href).then(() => {
              showToast('Product link copied to clipboard!', 'success');
            });
          }
        };

        // Toast Notification Function
        window.showToast = function (message, type = 'success') {
          const toastContainer = document.getElementById('toastContainer');
          const toast = document.createElement('div');
          toast.className = `toast ${type === 'error' ? 'error' : ''}`;

          const icon = type === 'error' ? 'fas fa-exclamation-circle' : 'fas fa-check-circle';

          toast.innerHTML = `
      <i class="${icon} alert-icon"></i>
      <span>${message}</span>
      <button class="toast-close" onclick="this.parentElement.remove()">
        <i class="fas fa-times"></i>
      </button>
    `;

          toastContainer.appendChild(toast);

          // Show toast
          setTimeout(() => {
            toast.classList.add('show');
          }, 100);

          // Auto remove after 5 seconds
          setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => {
              if (toast.parentElement) {
                toast.remove();
              }
            }, 300);
          }, 5000);
        };

        // Keyboard Navigation
        document.addEventListener('keydown', function (e) {
          if (e.key === 'Escape') {
            closeImageZoom();
          }
        });

        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });

        // Intersection Observer for animations
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.style.opacity = '1';
              entry.target.style.transform = 'translateY(0)';
            }
          });
        }, observerOptions);

        // Observe elements for animation
        document.querySelectorAll('.product-features, .gallery').forEach(el => {
          el.style.opacity = '0';
          el.style.transform = 'translateY(20px)';
          el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
          observer.observe(el);
        });

        // Add loading states to all buttons
        document.querySelectorAll('.btn').forEach(btn => {
          btn.addEventListener('click', function () {
            if (!this.disabled && !this.classList.contains('btn-loading')) {
              // Add subtle loading effect for non-AJAX buttons
              this.style.transform = 'scale(0.98)';
              setTimeout(() => {
                this.style.transform = 'scale(1)';
              }, 150);
            }
          });
        });

        // Enhanced form validation
        const quantityInput = document.getElementById('quantity');
        if (quantityInput) {
          quantityInput.addEventListener('input', function () {
            let value = parseInt(this.value);
            if (value < 1) this.value = 1;
            if (value > 10) this.value = 10;
          });
        }

        // Add product view tracking (if analytics needed)
        // trackProductView('<%= p._id %>', '<%= p.title %>');

        // Initialize tooltips (if using Bootstrap tooltips)
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        if (typeof bootstrap !== 'undefined') {
          tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
          });
        }

        // Add to recently viewed products
        addToRecentlyViewed({
          id: '<%= p._id %>',
          title: '<%= p.title %>',
          image: '<%= p.image %>',
          price: '<%= p.price %>',
          slug: '<%= p.slug %>'
        });

        // Recently viewed products function
        function addToRecentlyViewed(product) {
          let recentProducts = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');

          // Remove if already exists
          recentProducts = recentProducts.filter(p => p.id !== product.id);

          // Add to beginning
          recentProducts.unshift(product);

          // Keep only last 5 products
          recentProducts = recentProducts.slice(0, 5);

          localStorage.setItem('recentlyViewed', JSON.stringify(recentProducts));
        }

        // Performance optimization: Lazy load images
        const lazyImages = document.querySelectorAll('img[data-src]');
        if (lazyImages.length > 0) {
          const imageObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.classList.remove('lazy');
                imageObserver.unobserve(img);
              }
            });
          });

          lazyImages.forEach(img => imageObserver.observe(img));
        }

        // Add error handling for images
        document.querySelectorAll('img').forEach(img => {
          img.addEventListener('error', function () {
            this.src = '/images/default.jpg';
            this.alt = 'Image not available';
          });
        });

        // Add price formatting
        const priceElements = document.querySelectorAll('.price-main');
        priceElements.forEach(element => {
          const price = element.textContent.trim();
          if (price) {
            element.style.fontSize = 'clamp(24px, 4vw, 32px)';
          }
        });

        console.log('Product page initialized successfully');
      });

      // Service Worker registration (if you have one)
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', function () {
          navigator.serviceWorker.register('/sw.js')
            .then(registration => console.log('SW registered'))
            .catch(registrationError => console.log('SW registration failed'));
        });
      }

      // Add structured data for SEO
      const structuredData = {
        "@context": "https://schema.org/",
        "@type": "Product",
        "name": "<%= p.title %>",
        "description": "<%= p.desc %>",
        "image": "<%= p.image %>",
        "offers": {
          "@type": "Offer",
          "price": "<%= p.price %>",
          "priceCurrency": "INR",
          "availability": "https://schema.org/InStock"
        }
      };

      const script = document.createElement('script');
      script.type = 'application/ld+json';
      script.text = JSON.stringify(structuredData);
      document.head.appendChild(script);
    </script>

    <style>
      /* Additional inline styles for specific enhancements */
      .gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 15px;
        list-style: none;
        padding: 0;
      }

      .gallery-item {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        cursor: pointer;
      }

      .gallery-item:hover {
        transform: translateY(-4px);
      }

      .gallery-item img {
        width: 100%;
        height: 120px;
        object-fit: cover;
        transition: transform 0.3s ease;
      }

      .gallery-item:hover img {
        transform: scale(1.05);
      }

      /* Loading animation */
      @keyframes pulse {
        0% {
          opacity: 1;
        }

        50% {
          opacity: 0.5;
        }

        100% {
          opacity: 1;
        }
      }

      .loading-placeholder {
        animation: pulse 2s infinite;
        background: #f0f0f0;
        border-radius: 8px;
      }

      /* Custom scrollbar for webkit browsers */
      ::-webkit-scrollbar {
        width: 8px;
      }

      ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }

      ::-webkit-scrollbar-thumb {
        background: #007bff;
        border-radius: 4px;
      }

      ::-webkit-scrollbar-thumb:hover {
        background: #0056b3;
      }
    </style>